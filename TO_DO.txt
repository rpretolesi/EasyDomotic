FATTO-Mettere nel title bar il nome della stanza.
FATTO-Vedere se e' possibile impostare il dato del typo di dato anche se non ho protocolli
FATTO-Verificare bene Open e New del Tcp/Ip
FATTO-Specificare che 0 nelle funzioni degli holding register = 40001 e sistemare questo anche nella simulazione su arduino
FATTO-Capire perche' scrivendo un int 32 non scrive bene...
FATTO-Verificare bene, ancora 1 volta, se utilizzare lo short quando c'e' lo short, e non l'int. ecc...

FATTO-Cambiare il nome del campo TCP IP Address a seconda se Bluetooth e TcpIp
FATTO-Fare la lista dei Server, o come unica list con a fianco il tipo, oppure con 2 list separate.
Vedere se e' il caso di usare StartActivityForResult nella ListActivity anziche' le interfacce.
Vedere se possibile istanziare solo il server che si usa in quella pagina
Verificare se il wait su overbuffer funziona nel thread secondario di ricezione
Verificare bene cosa succede quando si va in timeout...
Verificare gestione errori lato Arduino.
FATTO-Finire di fare i setError su tutti i controlli.
FATTO-Verificare se possibile fare subito dopo una scrittura, una lettura, per aggiornare subito il dato.
Vedere come ripulire i buffer di ricezione sia su Arduino sia su Android, su errore
FATTO, anche se llegrmente in modo diverso!!! Selezionare il protocollo in base al tipo di istanza(seriale o TCPPIP). Lasciare, quindi, nella selezione solo 1 campo con scritto MODBUS.
FATTO-Fare lo stato del pulsante sul ritorno dello stato.
Vedere perche' saltuariamente si perde il collegamento col Bluetooth.
Inserire anche lo stato del segnale nel bluetooth.
Resettare il tempo di timeout solo quando la connessione viene stabilita.
Mettere il messaggio di errore come textview aggiuntivo sotto al campo in errore.
Verificare se Status.TIMEOUT risulti inutile in quanto c'e' gia' la descrizione.
Verificare perche' da' OutOfLenght prima di CRC error(dovrebbe, in teoria, dare prima il CRC error!